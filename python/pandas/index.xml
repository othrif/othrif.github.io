<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python - Othmane Rifki</title>
    <link>https://othrif.github.io/python/pandas/index.xml</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2020 14:41:32 +0200</lastBuildDate>
    
        <atom:link href="https://othrif.github.io/python/pandas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access numpy from dataframe</title>
      <link>https://othrif.github.io/python/pandas/df_numpy.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/df_numpy.html</guid>
      <description>import pandas as pd from io import StringIO import sys csv_data = \ &amp;#39;&amp;#39;&amp;#39;A,B,C,D 1.0,2.0,3.0,4.0 5.0,6.0,,8.0 10.0,11.0,12.0,&amp;#39;&amp;#39;&amp;#39; df = pd.read_csv(StringIO(csv_data)) df .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  df.values array([[ 1., 2., 3., 4.], [ 5., 6., nan, 8.], [10., 11., 12., nan]])  </description>
    </item>
    
    <item>
      <title>Categorical data</title>
      <link>https://othrif.github.io/python/pandas/categorical.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/categorical.html</guid>
      <description>Nominal and ordinal features Ordinal features: categorical values that can be sorted, i.e. t-shirt size
Nominal features: don&amp;rsquo;t imply any order, i.e. t-shirt color
import pandas as pd df = pd.DataFrame([[&amp;#39;green&amp;#39;, &amp;#39;M&amp;#39;, 10.1, &amp;#39;class2&amp;#39;], [&amp;#39;red&amp;#39;, &amp;#39;L&amp;#39;, 13.5, &amp;#39;class1&amp;#39;], [&amp;#39;blue&amp;#39;, &amp;#39;XL&amp;#39;, 15.3, &amp;#39;class2&amp;#39;]]) df.columns = [&amp;#39;color&amp;#39;, &amp;#39;size&amp;#39;, &amp;#39;price&amp;#39;, &amp;#39;classlabel&amp;#39;] df .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  Mapping ordinal features size_mapping = {&amp;#39;XL&amp;#39;: 3, &amp;#39;L&amp;#39;: 2, &amp;#39;M&amp;#39;: 1} df[&amp;#39;size&amp;#39;] = df[&amp;#39;size&amp;#39;].</description>
    </item>
    
    <item>
      <title>How to set column names when importing csv</title>
      <link>https://othrif.github.io/python/pandas/column-names.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/column-names.html</guid>
      <description>Preliminaries # Import modules import pandas as pd # Set ipython&amp;#39;s max row display pd.set_option(&amp;#39;display.max_row&amp;#39;, 1000) # Set iPython&amp;#39;s max column width to 50 pd.set_option(&amp;#39;display.max_columns&amp;#39;, 50) # To import csv  from io import StringIO Create an example dataframe # Create an example dataframe csv_data = \ &amp;#39;&amp;#39;&amp;#39;1.0,2.0,3.0,4.0 5.0,6.0,,8.0 10.0,11.0,12.0,&amp;#39;&amp;#39;&amp;#39; header_list=[&amp;#39;A&amp;#39;,&amp;#39;B&amp;#39;,&amp;#39;C&amp;#39;,&amp;#39;D&amp;#39;] df = pd.read_csv(StringIO(csv_data), names=header_list) df .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  </description>
    </item>
    
    <item>
      <title>Increase display size</title>
      <link>https://othrif.github.io/python/pandas/display.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/display.html</guid>
      <description>For columns and rows import pandas as pd pd.set_option(&amp;#39;display.max_colwidth&amp;#39;, 9999) pd.set_option(&amp;#39;display.max_rows&amp;#39;, 9999) </description>
    </item>
    
    <item>
      <title>List unique values in a pandas column</title>
      <link>https://othrif.github.io/python/pandas/list_unique.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/list_unique.html</guid>
      <description>Preliminaries # Import modules import pandas as pd # Set ipython&amp;#39;s max row display pd.set_option(&amp;#39;display.max_row&amp;#39;, 1000) # Set iPython&amp;#39;s max column width to 50 pd.set_option(&amp;#39;display.max_columns&amp;#39;, 50) Create an example dataframe # Create an example dataframe data = {&amp;#39;name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;year&amp;#39;: [2012, 2012, 2013, 2014, 2014], &amp;#39;reports&amp;#39;: [4, 24, 31, 2, 3]} df = pd.DataFrame(data, index = [&amp;#39;Cochice&amp;#39;, &amp;#39;Pima&amp;#39;, &amp;#39;Santa Cruz&amp;#39;, &amp;#39;Maricopa&amp;#39;, &amp;#39;Yuma&amp;#39;]) df .dataframe tbody tr th { vertical-align: top; } .</description>
    </item>
    
    <item>
      <title>Missing values</title>
      <link>https://othrif.github.io/python/pandas/missing.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/missing.html</guid>
      <description>Identify missing data import pandas as pd from io import StringIO import sys csv_data = \ &amp;#39;&amp;#39;&amp;#39;A,B,C,D 1.0,2.0,3.0,4.0 5.0,6.0,,8.0 10.0,11.0,12.0,&amp;#39;&amp;#39;&amp;#39; df = pd.read_csv(StringIO(csv_data)) df .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  df.isnull().sum() A 0 B 0 C 1 D 1 dtype: int64  Eliminating features with missing values # remove rows that contain missing values df.dropna(axis=0) .dataframe tbody tr th { vertical-align: top; } .</description>
    </item>
    
    <item>
      <title>Split text column into multiple new columns</title>
      <link>https://othrif.github.io/python/pandas/split_text.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/split_text.html</guid>
      <description>See: https://github.com/dennisbakhuis/Tutorials/blob/master/B_Pandas_tips/2-%20Split%20text%20column%20into%20multiple%20new%20columns.ipynb
import pandas as pd df = pd.DataFrame([ {&amp;#39;path&amp;#39;: &amp;#39;train/data_shard_1.csv&amp;#39;}, {&amp;#39;path&amp;#39;: &amp;#39;train/data_shard_2.csv&amp;#39;}, {&amp;#39;path&amp;#39;: &amp;#39;train/data_shard_3.csv&amp;#39;}, {&amp;#39;path&amp;#39;: &amp;#39;test/data_shard_1.csv&amp;#39;}, {&amp;#39;path&amp;#39;: &amp;#39;test/data_shard_2.csv&amp;#39;}, ]) df = (df .join(df .loc[:, &amp;#39;path&amp;#39;] .str.split(&amp;#39;/&amp;#39;, expand=True) .rename(columns={0: &amp;#39;folder&amp;#39;, 1: &amp;#39;filename&amp;#39;}) ) ) df .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  </description>
    </item>
    
    <item>
      <title>Train, test, split pandas DataFrame</title>
      <link>https://othrif.github.io/python/pandas/traintestsplit.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/pandas/traintestsplit.html</guid>
      <description>import numpy as np import pandas as pd # Get data df_wine = pd.read_csv(&amp;#39;https://archive.ics.uci.edu/&amp;#39; &amp;#39;ml/machine-learning-databases/wine/wine.data&amp;#39;, header=None) # Rename columns df_wine.columns = [&amp;#39;Class label&amp;#39;, &amp;#39;Alcohol&amp;#39;, &amp;#39;Malic acid&amp;#39;, &amp;#39;Ash&amp;#39;, &amp;#39;Alcalinity of ash&amp;#39;, &amp;#39;Magnesium&amp;#39;, &amp;#39;Total phenols&amp;#39;, &amp;#39;Flavanoids&amp;#39;, &amp;#39;Nonflavanoid phenols&amp;#39;, &amp;#39;Proanthocyanins&amp;#39;, &amp;#39;Color intensity&amp;#39;, &amp;#39;Hue&amp;#39;, &amp;#39;OD280/OD315 of diluted wines&amp;#39;, &amp;#39;Proline&amp;#39;] # Class labels print(&amp;#39;Class labels&amp;#39;, np.unique(df_wine[&amp;#39;Class label&amp;#39;])) df_wine.head() Class labels [1 2 3]  .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }  # train, test, split from sklearn.</description>
    </item>
    
  </channel>
</rss>