<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python - Othmane Rifki</title>
    <link>https://othrif.github.io/python/numpy/index.xml</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2020 14:41:32 +0200</lastBuildDate>
    
        <atom:link href="https://othrif.github.io/python/numpy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calculating cosine between two vectors</title>
      <link>https://othrif.github.io/python/numpy/angle.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/numpy/angle.html</guid>
      <description>Using inverse cosine and norm from numpy: v1 = np.array([1, 2, 3]) v2 = 0.5 * v1 np.arccos(v1.dot(v2) / (np.linalg.norm(v1) * np.linalg.norm(v2))) 0.0  </description>
    </item>
    
    <item>
      <title>Copy, shallow copy, deep copy in Numpy</title>
      <link>https://othrif.github.io/python/numpy/copy.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/numpy/copy.html</guid>
      <description>import numpy as np Shallow copy x = np.array([1, 2, 3]) y = x z = np.copy(x) x[0] = 10 print(&amp;#39;y=&amp;#39;, y) print(&amp;#39;z=&amp;#39;, z) y= [10 2 3] z= [1 2 3]  Deep copy Shallow copy does not copy object elements within arrays
a = np.array([1, &amp;#39;m&amp;#39;, [2, 3, 4]], dtype=object) b = np.copy(a) b[2][0] = 10 a array([1, &#39;m&#39;, list([10, 3, 4])], dtype=object)  Use copy.deepcopy()
import copy a = np.</description>
    </item>
    
    <item>
      <title>Searching</title>
      <link>https://othrif.github.io/python/numpy/searching_where.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/numpy/searching_where.html</guid>
      <description>Using where Function call: where(condition, [x, y])
Return elements chosen from x or y depending on condition. Used with multidimensions
import numpy as np np.where([[True, False], [True, True]], [[1, 2], [3, 4]], [[9, 8], [7, 6]]) array([[1, 8], [3, 4]])  </description>
    </item>
    
    <item>
      <title>Select array entries with another array</title>
      <link>https://othrif.github.io/python/numpy/array_manip.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/python/numpy/array_manip.html</guid>
      <description>Using where() and take() import numpy as np y_pred = np.array([1,0,0,1,1,0,0]) y_true = np.array([1,0,1,1,1,1,0]) test_files = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;g&amp;#39;] np.where(y_pred != y_true) (array([2, 5]),)  np.take(test_files,np.where(y_pred != y_true)[0]) array([&#39;c&#39;, &#39;f&#39;], dtype=&#39;&amp;lt;U1&#39;)  </description>
    </item>
    
  </channel>
</rss>