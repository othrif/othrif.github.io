<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine_learning - Othmane Rifki</title>
    <link>https://othrif.github.io/machine_learning/basics/index.xml</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2020 14:41:32 +0200</lastBuildDate>
    
        <atom:link href="https://othrif.github.io/machine_learning/basics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calculate error in ensemble</title>
      <link>https://othrif.github.io/machine_learning/basics/ensemble_proba.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/ensemble_proba.html</guid>
      <description>Error rate of the ensemble Assume you have $n$ classifiers and each has an error $\epsilon$, the combined error of the ensemble is smaller than the error in the individual classifiers.
from scipy.special import comb import math def ensemble_error(n_classifier, error): k_start = int(math.ceil(n_classifier / 2.)) probs = [comb(n_classifier, k) * error**k * (1-error)**(n_classifier - k) for k in range(k_start, n_classifier + 1)] return sum(probs) ensemble_error(11, 0.25) 0.03432750701904297  Ensemble vs base error rates The base error should be less than 0.</description>
    </item>
    
    <item>
      <title>Calculate softmax</title>
      <link>https://othrif.github.io/machine_learning/basics/softmax_calc.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/softmax_calc.html</guid>
      <description>Calculate softmax $\sigma(\vec{z})i = \frac{e^{z_i}}{\sum{j=1}^{K}e^{z_j}}$
from math import exp import numpy as np z = [13, 9, 9] np.round(np.exp(z)/sum(np.exp(z)),2) array([0.96, 0.02, 0.02])  </description>
    </item>
    
    <item>
      <title>Check from CLI if Jupyter is running and kill it</title>
      <link>https://othrif.github.io/machine_learning/basics/dl_server.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/dl_server.html</guid>
      <description>Check what is running and kill it For tensorflow and pytorch, you need gcc8 to compile code which is not the system default. Do the following to use gcc8:
jupyter notebook list jupyter notebook stop 8888 </description>
    </item>
    
    <item>
      <title>Check package versions</title>
      <link>https://othrif.github.io/machine_learning/basics/versions.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/versions.html</guid>
      <description>Check deep learning library versions !python -c &amp;#34;import tensorflow as tf; print(&amp;#39;Tensorflow:&amp;#39;, tf.__version__)&amp;#34; !python -c &amp;#34;import torch; print(&amp;#39;Pytorch:&amp;#39;, torch.__version__)&amp;#34; Tensorflow: 2.3.1 Pytorch: 1.7.0  </description>
    </item>
    
    <item>
      <title>Profiling GPU with Nvidia tools</title>
      <link>https://othrif.github.io/machine_learning/basics/cuda_profiling.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/cuda_profiling.html</guid>
      <description>Using Nsight systems To install Nsight systems:
 Download from Nvidia Make executable with chmod a+x NsightSystems-linux-public-2020.5.1.85-5ee086b.run install with ./NsightSystems-linux-public-2020.5.1.85-5ee086b.run Add to path export PATH=&amp;quot;/home/othrif/setup/nsight-systems-2020.5.1/target-linux-x64:$PATH&amp;quot; Run profiling tool with: nsys profile ./program  Using nvida-smi nvidia-smi -l 1 &amp;gt;&amp;gt; gpu-stats.out </description>
    </item>
    
    <item>
      <title>Standard includes</title>
      <link>https://othrif.github.io/machine_learning/basics/includes.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/machine_learning/basics/includes.html</guid>
      <description>Basic includes for TensorFlow import os import pathlib import matplotlib.pyplot as plt import numpy as np import seaborn as sns import tensorflow as tf from tensorflow.keras.layers.experimental import preprocessing from tensorflow.keras import layers from tensorflow.keras import models from IPython import display # Set seed for experiment reproducibility seed = 42 tf.random.set_seed(seed) np.random.seed(seed) </description>
    </item>
    
  </channel>
</rss>