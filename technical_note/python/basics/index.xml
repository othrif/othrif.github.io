<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Othmane Rifki</title>
    <link>http://othmanerifki.github.io/technical_note/python/basics/</link>
      <atom:link href="http://othmanerifki.github.io/technical_note/python/basics/index.xml" rel="self" type="application/rss+xml" />
    <description>Othmane Rifki</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 12 Apr 2020 14:41:32 +0200</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Othmane Rifki</title>
      <link>http://othmanerifki.github.io/technical_note/python/basics/</link>
    </image>
    
    <item>
      <title>File, dir handling with os module</title>
      <link>http://othmanerifki.github.io/technical_note/python/basics/os_manip/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othmanerifki.github.io/technical_note/python/basics/os_manip/</guid>
      <description>&lt;h3 id=&#34;preliminary&#34;&gt;Preliminary&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;current-location&#34;&gt;Current location&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(f&#39;Current location is: {os.getcwd()!r}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Current location is: &#39;/Users/othmanerifki/projects/website/othrif.hugo/content/technical_note/python/basics&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;create-dir-if-it-does-not-exist&#34;&gt;Create dir if it does not exist&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;path=&#39;/tmp/test&#39;
if not os.path.exists(path):
    os.mkdir(path)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;check-by-going-to-the-newly-created-area-and-outputing-path&#34;&gt;Check by going to the newly created area and outputing path&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;os.chdir(path)
print(f&#39;New location is: {os.getcwd()!r}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;New location is: &#39;/private/tmp/test&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;open-file&#34;&gt;Open file&lt;/h3&gt;
&lt;p&gt;Options available: &lt;code&gt;os.O_RDONLY, os.O_WRONLY, os.O_RDWR, os.O_CREAT, os.O_APPEND&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fd = os.open(path+&#39;/mytext.txt&#39;, os.O_RDONLY | os.O_CREAT) # open file
print(f&#39;Intial file: {os.listdir(path)}&#39;)
os.rename(&#39;mytext.txt&#39;, &amp;quot;mytest_rename.txt&amp;quot;)
print(f&#39;Renamed file:{os.listdir(path)}&#39;)
os.close(fd) # close
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Intial file: [&#39;mytext.txt&#39;]
Renamed file:[&#39;mytest_rename.txt&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;remove-commands&#34;&gt;Remove commands&lt;/h3&gt;
&lt;h4 id=&#34;1-remove-directory-and-all-its-content&#34;&gt;1. Remove directory and all its content&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import shutil
if os.path.exists(path) and os.path.isdir(path):
    shutil.rmtree(path)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;2-alternative-approach&#34;&gt;2. Alternative approach&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pathlib import Path
dirpath = Path(path)
if dirpath.exists() and dirpath.is_dir():
    shutil.rmtree(path)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Print statements</title>
      <link>http://othmanerifki.github.io/technical_note/python/basics/print/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othmanerifki.github.io/technical_note/python/basics/print/</guid>
      <description>&lt;h3 id=&#34;simple-printing&#34;&gt;Simple printing&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&#39;Printing example!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Printing example!
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;f-string-formatting&#34;&gt;f-string formatting:&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f &#39; &amp;lt;text&amp;gt; { &amp;lt;expression&amp;gt; &amp;lt;optional !s, !r, or !a&amp;gt; &amp;lt;optional : format specifier&amp;gt; } &amp;lt;text&amp;gt; ... &#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;&amp;lt;optional !s, !r, or !a&amp;gt;&lt;/code&gt; mean &lt;code&gt;!s (str), !r (repr), and !a (ascii)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import datetime
name = &#39;Othmane&#39;
age = 30
anniversary = datetime.date(1989, 2, 6)
print(f&#39;My name is {name.lower()}, my age next year is {age+1}, my anniversary is {anniversary:%A, %B %d, %Y}.&#39;)
print(f&#39;He said his name is {name!r}.&#39;) # !r for repr
print(r&#39;Raw output: /Users/othmanerifki&#39;) # r for raw output
message = (
    f&#39;Hi {name}.&#39;
    f&#39;Your age is {age}.&#39;
)
print(message)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;In lower case:  othmane
My name is othmane, my age next year is 31, my anniversary is Monday, February 06, 1989.
He said his name is &#39;Othmane&#39;.
Raw output: /Users/othmanerifki
Hi Othmane.Your age is 30.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;quotation-braces&#34;&gt;Quotation, braces:&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(f&#39;Using quotation {name}.&#39;)
print(f&#39;Using quotation &amp;quot;{name}&amp;quot;.&#39;)
print(f&#39;Using quotation \&#39;{name}\&#39;.&#39;)
print(f&#39;Without braces {74}&#39;)
print(f&#39;With braces {{74}}&#39;)
print(f&#39;to show more {{{{74}}}}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Using quotation Othmane.
Using quotation &amp;quot;Othmane&amp;quot;.
Using quotation &#39;Othmane&#39;.
Without braces 74
With braces {74}
to show more {{74}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;number-formatting&#34;&gt;Number formatting&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python f&#39;{value:{width}.{precision}&amp;lt;type&amp;gt;}&#39;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;: s(string), f(float), d(decimal), x(hex), X(HEX), e(exponent scientific notation), E(same as e with &amp;lsquo;E&amp;rsquo;), g(general, it rounds and format to scientific or fixed decimals), G(same as g but E), %(x100 and percent sign)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;weight = 83.1
print(f&#39;With float is {weight:.2f}kg&#39;)
print(f&#39;With percentage is {20/100:.2%}&#39;)
print(f&#39;With scientific notation is {10**-6:.2E}&#39;)
print(f&#39;With general notation is {10**-6:g}&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;With float is 83.10kg
With percentage is 20.00%
With scientific notation is 1.00E-06
With general notation is 1e-06
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;indexing&#34;&gt;Indexing&lt;/h3&gt;
&lt;p&gt;Not quite about printing, but a good illustration of what to expect&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;txt = &#39;Hello World&#39;
print(f&#39;Particular element: {txt[0]}&#39;)
print(f&#39;substring: {txt[0:5]}&#39;)
print(f&#39;substring: {txt[:5]}&#39;)
print(f&#39;substring: {txt[0:-6]}&#39;)
print(f&#39;substring: {txt[6:]}&#39;)
print(f&#39;skip 2: {txt[::2]}&#39;)
print(f&#39;skip 3: {txt[::3]}&#39;)
print(f&#39;Invert order: {txt[::-1]}&#39;)
print(f&#39;String length: {len(txt)}&#39;)
print(f&#39;Repetition: {&amp;quot;.&amp;quot;*10}&#39;)
print(f&#39;Concatenation: {txt+&amp;quot; from Hamburg!&amp;quot;}&#39;)
print(f&#39;Escape characters...&#39;)
print(f&#39;few examples in this line: \&#39;\&amp;quot;123\b \thorizontal&#39;)
print(f&#39;1234567 carriage return \rXXX&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Particular element: H
substring: Hello
substring: Hello
substring: Hello
substring: World
skip 2: HloWrd
skip 3: HlWl
Invert order: dlroW olleH
String length: 11
Repetition: ..........
Concatenation: Hello World from Hamburg!
Escape characters...
few examples in this line: &#39;&amp;quot;12 	horizontal
XXX4567 carriage return 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;casting&#34;&gt;Casting&lt;/h3&gt;
&lt;p&gt;Same as above, not related to printing but gives a good illustration&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x=&amp;quot;10&amp;quot;
y=&amp;quot;7.1&amp;quot;
print(f&#39;Test with x+y where x={x}, y={y}&#39;)
print(f&#39;No casting: x+y={x+y}&#39;)
print(f&#39;Casting to float: x+y={float(x)+float(y)}&#39;)
print(f&#39;Casting to int: x+y={int(x)+int(float(y))}&#39;) # int(7.1) give error
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Test with x+y where x=10, y=7.1
No casting: x+y=107.1
Casting to float: x+y=17.1
Casting to int: x+y=17
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
