<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical notes | Othmane Rifki</title>
    <link>http://othrif.github.io/technical_note/python/pandas/</link>
      <atom:link href="http://othrif.github.io/technical_note/python/pandas/index.xml" rel="self" type="application/rss+xml" />
    <description>Technical notes</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 08 Apr 2020 22:44:12 +0200</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Technical notes</title>
      <link>http://othrif.github.io/technical_note/python/pandas/</link>
    </image>
    
    <item>
      <title>Boolean operators with Pandas</title>
      <link>http://othrif.github.io/technical_note/python/pandas/boolean_manip/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/boolean_manip/</guid>
      <description>&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
cpc = cars[&#39;cars_per_cap&#39;]
between = np.logical_and(cpc&amp;gt;100,cpc&amp;lt;500)
medium = cars[between]
print(medium)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   country  drives_right  cars_per_cap
RU  Russia          True           200
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Creating DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/createdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/createdf/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;From a list of dictionaries: construct row by row&lt;/li&gt;
&lt;li&gt;From a dictionary of lists: construct column by column&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;from-a-list-of-dictionaries&#34;&gt;From a list of dictionaries&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd 

# Create a list of dictionaries with new data
avocados_list = [
    {&#39;date&#39;: &#39;2019-11-03&#39;, &#39;small_sold&#39;: 10376832, &#39;large_sold&#39;: 7835071},
    {&#39;date&#39;: &#39;2019-11-10&#39;, &#39;small_sold&#39;: 10717154, &#39;large_sold&#39;: 8561348}
]

# Convert list into DataFrame
avocados_2019 = pd.DataFrame(avocados_list)

# Print the new DataFrame
print(avocados_2019)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         date  small_sold  large_sold
0  2019-11-03    10376832     7835071
1  2019-11-10    10717154     8561348
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;from-a-dictionary-of-lists&#34;&gt;From a dictionary of lists&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a dictionary of lists with new data
avocados_dict = {
    &#39;date&#39;: [&#39;2019-11-17&#39;, &#39;2019-12-01&#39;],
    &#39;small_sold&#39;: [10859987, 9291631],
    &#39;large_sold&#39;: [7674135, 6238096]
}

# Convert dictionary into DataFrame
avocados_2019 = pd.DataFrame(avocados_dict)

# Print the new DataFrame
print(avocados_2019)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         date  small_sold  large_sold
0  2019-11-17    10859987     7674135
1  2019-12-01     9291631     6238096
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames basics</title>
      <link>http://othrif.github.io/technical_note/python/pandas/dataframe/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/dataframe/</guid>
      <description>&lt;h3 id=&#34;dataframes&#34;&gt;DataFrames&lt;/h3&gt;
&lt;p&gt;store tabular data where you can label the rows and the columns.&lt;/p&gt;
&lt;h4 id=&#34;dataframe-from-dictionary&#34;&gt;DataFrame from dictionary&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
cars_dict = { &#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;set-the-row-attribute&#34;&gt;Set the row attribute&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Definition of row_labels
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]

# Specify row labels of cars
cars.index = row_labels
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;useful-exploration&#34;&gt;Useful exploration&lt;/h3&gt;
&lt;h4 id=&#34;methods&#34;&gt;Methods&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.head()&lt;/code&gt; first few rows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.info()&lt;/code&gt; name of columns, data type and number of missing values&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.describe()&lt;/code&gt; summary statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;attributes&#34;&gt;Attributes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.shape&lt;/code&gt; attribute for rows x columns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.values&lt;/code&gt; converts to a 2D numpy array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.columns&lt;/code&gt; An index of columns: the column names.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.index&lt;/code&gt; An index for the rows: either row numbers or row names&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.info()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 7 entries, 0 to 6
Data columns (total 3 columns):
 #   Column        Non-Null Count  Dtype 
---  ------        --------------  ----- 
 0   country       7 non-null      object
 1   drives_right  7 non-null      bool  
 2   cars_per_cap  7 non-null      int64 
dtypes: bool(1), int64(1), object(1)
memory usage: 175.0+ bytes
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(7, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.describe()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;351.571429&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;345.595552&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;57.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;200.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;659.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;809.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.values
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;array([[&#39;United States&#39;, True, 809],
       [&#39;Australia&#39;, False, 731],
       [&#39;Japan&#39;, False, 588],
       [&#39;India&#39;, False, 18],
       [&#39;Russia&#39;, True, 200],
       [&#39;Morocco&#39;, True, 70],
       [&#39;Egypt&#39;, True, 45]], dtype=object)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.columns
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Index([&#39;country&#39;, &#39;drives_right&#39;, &#39;cars_per_cap&#39;], dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.index
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Int64Index([0, 1, 2, 3, 4, 5, 6], dtype=&#39;int64&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;save-to-csv&#34;&gt;Save to csv&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print cars again
print(cars)
cars.to_csv(&#39;cars.csv&#39;,index=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;read-csv&#34;&gt;Read csv&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Import pandas as pd
import pandas as pd

# Import the cars.csv data: cars
cars = pd.read_csv(&#39;cars.csv&#39;)

# Print out cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   Unnamed: 0        country  drives_right  cars_per_cap
0           0  United States          True           809
1           1      Australia         False           731
2           2          Japan         False           588
3           3          India         False            18
4           4         Russia          True           200
5           5        Morocco          True            70
6           6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#Fix import by including index_col
cars = pd.read_csv(&#39;cars.csv&#39;,index_col=0)

# Print out cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames counting</title>
      <link>http://othrif.github.io/technical_note/python/pandas/countingdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/countingdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;27010.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8282.67&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;drop-duplicates-with-drop_duplicates&#34;&gt;Drop duplicates with &lt;code&gt;.drop_duplicates()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.drop_duplicates(subset=&#39;type&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.drop_duplicates(subset=[&#39;type&#39;,&#39;is_holiday&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7661.72&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;20094.2&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;9479.02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;23872&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique = df.drop_duplicates(subset=[&#39;type&#39;,&#39;is_holiday&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;count-with-value_counts&#34;&gt;Count with &lt;code&gt;.value_counts()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    2
A    2
B    2
Name: type, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts(sort=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    2
A    2
B    2
Name: type, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts(normalize=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    0.333333
A    0.333333
B    0.333333
Name: type, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;grouping-with-groupby&#34;&gt;Grouping with &lt;code&gt;.groupby()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].min()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    1376.15
B    2876.19
C    7857.88
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example of how much the syntax gets simplified with &lt;code&gt;.groupby()&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Calc total weekly sales
sales_all = df[&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type A stores, calc total weekly sales
sales_A = df[df[&amp;quot;type&amp;quot;] == &amp;quot;A&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type B stores, calc total weekly sales
sales_B = df[df[&amp;quot;type&amp;quot;] == &amp;quot;B&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type C stores, calc total weekly sales
sales_C = df[df[&amp;quot;type&amp;quot;] == &amp;quot;C&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

print(&#39;all=&#39;, sales_all)
print(&#39;A &#39;, sales_A)
print(&#39;B &#39;, sales_B)
print(&#39;C &#39;, sales_C)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;all= 2629115.29
A  2324619.4500000007
B  154701.55
C  149794.29
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    2324619.45
B     154701.55
C     149794.29
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&#39;A &#39;, sales_A/sales_all)
print(&#39;B &#39;, sales_B/sales_all)
print(&#39;C &#39;, sales_C/sales_all)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;A  0.8841831542503412
B  0.05884167597686444
C  0.056975169772794564
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&amp;quot;type&amp;quot;)[&amp;quot;weekly_sales&amp;quot;].sum()/df[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    0.884183
B    0.058842
C    0.056975
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;multiple-categories&#34;&gt;Multiple categories&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby([&#39;type&#39;,&#39;is_holiday&#39;])[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type  is_holiday
A     False         2248771.03
      True            75848.42
B     False          132873.65
      True            21827.90
C     False           91331.14
      True            58463.15
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;multiple-grouped-summaries&#34;&gt;Multiple grouped summaries&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;weekly_sales&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;1141.613223&lt;/td&gt;
      &lt;td&gt;47499.895208&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;2386.001914&lt;/td&gt;
      &lt;td&gt;32995.090104&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
      &lt;td&gt;6518.664179&lt;/td&gt;
      &lt;td&gt;41980.631009&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames pivot tables</title>
      <link>http://othrif.github.io/technical_note/python/pandas/pivotdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/pivotdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;13457.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;11785.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;30915&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9402.16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9479.98&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby([&#39;type&#39;,&#39;is_holiday&#39;])[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;weekly_sales&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=[&#39;weekly_sales&#39;,&#39;frac_sales&#39;], index=[&#39;type&#39;,&#39;is_holiday&#39;],aggfunc=[np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amin&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;add-margins&#34;&gt;Add margins&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=[&#39;weekly_sales&#39;,&#39;frac_sales&#39;], index=[&#39;type&#39;,&#39;is_holiday&#39;],aggfunc=[np.min,np.max], margins=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amin&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;All&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;adding-a-column&#34;&gt;Adding a column&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=&#39;weekly_sales&#39;, index=&#39;type&#39;, columns=&#39;is_holiday&#39;, aggfunc=np.max)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;th&gt;True&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;fill-missing-with-0&#34;&gt;Fill missing with 0&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=&#39;weekly_sales&#39;, index=&#39;type&#39;, columns=&#39;is_holiday&#39;, aggfunc=np.max, fill_value=0)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;th&gt;True&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;working-with-pivot-tables&#34;&gt;Working with pivot tables&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;year&#39;] = df[&#39;date&#39;].dt.year
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;year&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;220.866&lt;/td&gt;
      &lt;td&gt;2010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;193.426&lt;/td&gt;
      &lt;td&gt;2010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;507.39&lt;/td&gt;
      &lt;td&gt;2010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;154.312&lt;/td&gt;
      &lt;td&gt;2010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;155.589&lt;/td&gt;
      &lt;td&gt;2010&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_by_type_vs_year = df.pivot_table(values=&#39;weekly_sales&#39;, index=[&#39;type&#39;,&#39;is_holiday&#39;], columns=&#39;year&#39;,aggfunc=np.min)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Get the worldwide mean temp by year
mean_temp_by_year = df_by_type_vs_year.mean()
# Filter for the year that had the highest mean temp
print(mean_temp_by_year[mean_temp_by_year==mean_temp_by_year.max()])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;year
2010    10303.61
dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Get the mean temp by city
mean_temp_by_city = df_by_type_vs_year.mean(axis=&#39;columns&#39;)
# Filter for the city that had the lowest mean temp
print(mean_temp_by_city[mean_temp_by_city==mean_temp_by_city.min()])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type  is_holiday
A     False         2464.95
dtype: float64
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames statistics</title>
      <link>http://othrif.github.io/technical_note/python/pandas/statdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/statdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;10462.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9162.84&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;24035.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7309.96&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7370.47&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;weekly_sales&#39;].mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;26291.1529
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;weekly_sales&#39;].sum()*1e-6 # in millions
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;2.62911529
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.sort_values(&#39;weekly_sales&#39;,ascending=False).head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;50031.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;49015.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;48754.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;efficient-summaries-with-agg&#34;&gt;Efficient summaries with &lt;code&gt;.agg()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;.agg()&lt;/code&gt; method allows you to apply your own custom functions to a DataFrame, as well as apply functions to more than one column of a DataFrame at once, making your aggregations super efficient.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# A custom inter-quartile range function. Alternative to standard deviation that is helpful if your data contains outliers
def iqr(column):
    return column.quantile(0.75) - column.quantile(0.25)

print(iqr(df[&#39;weekly_sales&#39;]))
print(df[&#39;weekly_sales&#39;].agg(iqr))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;21645.687500000004
21645.687500000004
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg(iqr))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;weekly_sales    21645.687500
frac_sales       9086.348194
dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([iqr,np.median]))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;        weekly_sales   frac_sales
iqr       21645.6875  9086.348194
median    23231.7600  9752.143956
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cumulative-statistics&#34;&gt;Cumulative statistics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.cumsum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.cummax()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;cum_weekly_sales&#39;] = df[&#39;weekly_sales&#39;].cumsum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;cum_max_sales&#39;] = df[&#39;weekly_sales&#39;].cummax()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;date&#39;,&#39;weekly_sales&#39;,&#39;cum_weekly_sales&#39;,&#39;cum_max_sales&#39;]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         date weekly_sales cum_weekly_sales cum_max_sales
0  2010-02-05      24924.5          24924.5       24924.5
1  2010-03-05      21827.9          46752.4       24924.5
2  2010-04-02      57258.4           104011       57258.4
3  2010-05-07      17413.9           121425       57258.4
4  2010-06-04      17558.1           138983       57258.4
..        ...          ...              ...           ...
95 2011-01-07      36599.5       2.5351e+06       57258.4
96 2010-02-05        16931      2.55203e+06       57258.4
97 2010-03-05      24064.7      2.57609e+06       57258.4
98 2010-04-02        25435      2.60153e+06       57258.4
99 2010-05-07      27588.3      2.62912e+06       57258.4

[100 rows x 4 columns]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Dictionary comprehesion</title>
      <link>http://othrif.github.io/technical_note/python/pandas/dict_comprehesion/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/dict_comprehesion/</guid>
      <description>&lt;p&gt;main difference between a list comprehension and a dict comprehension is the use of curly braces &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a list of strings: fellowship
fellowship = [&#39;frodo&#39;, &#39;samwise&#39;, &#39;merry&#39;, &#39;aragorn&#39;, &#39;legolas&#39;, &#39;boromir&#39;, &#39;gimli&#39;]

# Create dict comprehension: new_fellowship
new_fellowship = {member: len(member) for member in fellowship}

# Print the new dictionary
print(new_fellowship)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;{&#39;frodo&#39;: 5, &#39;samwise&#39;: 7, &#39;merry&#39;: 5, &#39;aragorn&#39;: 7, &#39;legolas&#39;: 7, &#39;boromir&#39;: 7, &#39;gimli&#39;: 5}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Do not truncate column</title>
      <link>http://othrif.github.io/technical_note/python/pandas/no_truncate/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/no_truncate/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
counts_dict = {}
csv_url=&#39;../datasets/tweets.csv&#39;
chunk = pd.read_csv(csv_url)
print(chunk[&#39;text&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;0     RT @bpolitics: .@krollbondrating&#39;s Christopher...
1     RT @HeidiAlpine: @dmartosko Cruz video found.....
2     Njihuni me Zonjën Trump !!! | Ekskluzive https...
3     Your an idiot she shouldn&#39;t have tried to grab...
4     RT @AlanLohner: The anti-American D.C. elites ...
                            ...                        
95    RT @claytoncubitt: Stop asking Bernie supporte...
96    Kasich is gonna fuck this up for Ted Cruz  htt...
97    RT @akaMaude13: Seriously can&#39;t make this up. ...
98    Kasich is gonna fuck this up for Ted Cruz  htt...
99    @marklevinshow try reporting this truth. https...
Name: text, Length: 100, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pd.set_option(&#39;display.max_colwidth&#39;,None)
print(chunk[&#39;text&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;0     RT @bpolitics: .@krollbondrating&#39;s Christopher Whalen says Clinton is the weakest Dem candidate in 50 years https://t.co/pLk7rvoRSn https:/…
1                               RT @HeidiAlpine: @dmartosko Cruz video found.....racing from the scene.... #cruzsexscandal https://t.co/zuAPZfQDk3
2                                                                                 Njihuni me Zonjën Trump !!! | Ekskluzive https://t.co/4KmsQi47VD
3                                       Your an idiot she shouldn&#39;t have tried to grab trump after the fact she&#39;s an idiot https://t.co/lpASyeNVpG
4     RT @AlanLohner: The anti-American D.C. elites despise Trump for his America-first foreign policy. Trump threatens their gravy train. https:…
                                                                          ...                                                                     
95    RT @claytoncubitt: Stop asking Bernie supporters if they’ll vote for Hillary against Trump. We got a plan to beat Trump already. Called Ber…
96                                                                              Kasich is gonna fuck this up for Ted Cruz  https://t.co/JYYok5qx7R
97                                                 RT @akaMaude13: Seriously can&#39;t make this up. What a joke. #NeverTrump  https://t.co/JkTx6mdRgC
98                                                                              Kasich is gonna fuck this up for Ted Cruz  https://t.co/JYYok5qx7R
99                                                                                @marklevinshow try reporting this truth. https://t.co/z76fZzCRK3
Name: text, Length: 100, dtype: object
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Explicit indexing in DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/explicitindex/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/explicitindex/</guid>
      <description>&lt;h3 id=&#34;setting--removing-indexes&#34;&gt;Setting &amp;amp; removing indexes&lt;/h3&gt;
&lt;p&gt;pandas allows you to designate columns as an index&lt;/p&gt;
&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;set-index&#34;&gt;Set index&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.set_index(&#39;date&#39;).head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-04-02&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-05-07&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-06-04&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;reset-index&#34;&gt;Reset index&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.reset_index().head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;index&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;reset-the-index-dropping-its-contents&#34;&gt;Reset the index, dropping its contents&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.reset_index(drop=True).head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;subsetting-with-loc&#34;&gt;Subsetting with &lt;code&gt;.loc[]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Main feature for indexes is .loc[]: a subsetting method that accepts index values. When you pass it a single argument, it will take a subset of rows.&lt;/p&gt;
&lt;p&gt;one way to do it using &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;types = [&#39;B&#39;,&#39;C&#39;]
df[df[&#39;type&#39;].isin(types)]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;16333.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1800.51&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;17508.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1930.07&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-11-05&lt;/td&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-12-03&lt;/td&gt;
      &lt;td&gt;22517.6&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2482.26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;5578.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;29&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;866.227&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;32&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;9775.17&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1077.58&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;41&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;39773.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;4384.53&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;29967.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3303.57&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;68&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;317.062&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;alternative using &lt;code&gt;.loc[]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind = df.set_index(&#39;type&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind.loc[types]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-11-05&lt;/td&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;9775.17&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1077.58&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;39773.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;4384.53&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;29967.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3303.57&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;317.062&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;16333.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1800.51&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;17508.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1930.07&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-12-03&lt;/td&gt;
      &lt;td&gt;22517.6&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2482.26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;5578.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;866.227&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;multi-level-indexes&#34;&gt;Multi-level indexes&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind = df.set_index([&#39;type&#39;,&#39;department&#39;])
rows_to_keep = [(&#39;B&#39;,1),(&#39;C&#39;,3)]
df_ind.loc[rows_to_keep]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;3&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-11-05&lt;/td&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;866.227&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;sorting-by-index&#34;&gt;Sorting by index&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind.sort_index()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;20094.2&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2215.12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2011-01-07&lt;/td&gt;
      &lt;td&gt;15984.2&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1762.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5335.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;16333.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1800.51&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;17508.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1930.07&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-12-03&lt;/td&gt;
      &lt;td&gt;22517.6&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2482.26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;5578.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;866.227&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;100 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sort df_ind by index values at the department level&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind.sort_index(level=&#39;department&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;4&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;20094.2&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2215.12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2011-01-07&lt;/td&gt;
      &lt;td&gt;15984.2&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1762.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2011-01-07&lt;/td&gt;
      &lt;td&gt;36599.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;4034.61&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;16931&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1866.42&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;24064.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2652.81&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;25435&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2803.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;27588.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3041.25&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;100 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sort df_ind by department then type&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind.sort_index(level=[&#39;department&#39;,&#39;type&#39;], ascending=[True,False])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;16333.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1800.51&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;17508.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1930.07&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-12-03&lt;/td&gt;
      &lt;td&gt;22517.6&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2482.26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2011-01-07&lt;/td&gt;
      &lt;td&gt;36599.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;4034.61&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;16931&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1866.42&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;24064.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2652.81&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;25435&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2803.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;27588.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3041.25&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;100 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Indexing and selecting DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/indexselectingdata/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/indexselectingdata/</guid>
      <description>&lt;h3 id=&#34;dataframes&#34;&gt;DataFrames&lt;/h3&gt;
&lt;p&gt;store tabular data where you can label the rows and the columns.&lt;/p&gt;
&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;square-brackets&#34;&gt;Square brackets&lt;/h3&gt;
&lt;p&gt;The single bracket version gives a Pandas Series, the double bracket version gives a Pandas DataFrame.&lt;/p&gt;
&lt;h4 id=&#34;columns&#34;&gt;Columns&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out country column as Pandas Series
cars[&#39;country&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US     United States
AUS        Australia
JPN            Japan
IN             India
RU            Russia
MOR          Morocco
EG             Egypt
Name: country, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out country column as Pandas DataFrame
cars[[&#39;country&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out DataFrame with country and drives_right columns
cars[[&#39;country&#39;,&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;rows&#34;&gt;Rows&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out first 3 observations
cars[0:3]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out fourth, fifth and sixth observation
print(cars[3:6])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     country  drives_right  cars_per_cap
IN     India         False            18
RU    Russia          True           200
MOR  Morocco          True            70
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;selecting-rows-and-columns-with-loc-and-iloc&#34;&gt;Selecting rows and columns with &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;iloc&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;loc&lt;/code&gt; is label-based, which means that you have to specify rows and columns based on their row and column labels&lt;br&gt;
&lt;code&gt;iloc&lt;/code&gt; is integer index based, so you have to specify rows and columns by their integer index like you did in the previous exercise&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Selecting rows based on index column
# One bracket -&amp;gt; Series
cars.loc[&#39;RU&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.iloc[4]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Two bracket -&amp;gt; DataFrame
cars.loc[[&#39;RU&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[[&#39;RU&#39;, &#39;AUS&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[:,[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[[&#39;US&#39;, &#39;MOR&#39;],[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.iloc[0:6,[2]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[&#39;US&#39;:&#39;MOR&#39;,[&#39;cars_per_cap&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>List comprehesion</title>
      <link>http://othrif.github.io/technical_note/python/pandas/list_comprehesion/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/list_comprehesion/</guid>
      <description>&lt;h3 id=&#34;list-comprehesion&#34;&gt;List comprehesion&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[output expression for iterator variable in iterable]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;doctor = [&#39;house&#39;, &#39;cuddy&#39;, &#39;chase&#39;, &#39;thirteen&#39;, &#39;wilson&#39;]
new_doctor = [doc[0] for doc in doctor]
print(new_doctor)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;h&#39;, &#39;c&#39;, &#39;c&#39;, &#39;t&#39;, &#39;w&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;squares = [i**2 for i in range(10)]
print(squares)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;nested-list-comprehesion&#34;&gt;Nested list comprehesion&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[[output expression] for iterator variable in iterable]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a 5 x 5 matrix using a list of lists
matrix = [[col for col in range(5)] for row in range(5)]
print(matrix)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[[0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;conditional-list-comprehesion&#34;&gt;Conditional list comprehesion&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[ output expression for iterator variable in iterable if predicate expression ].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a list of strings: fellowship
fellowship = [&#39;frodo&#39;, &#39;samwise&#39;, &#39;merry&#39;, &#39;aragorn&#39;, &#39;legolas&#39;, &#39;boromir&#39;, &#39;gimli&#39;]

# Create list comprehension: new_fellowship
new_fellowship = [fellow for fellow in fellowship if len(fellow)&amp;gt;=7]

# Print the new list
print(new_fellowship)

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;samwise&#39;, &#39;aragorn&#39;, &#39;legolas&#39;, &#39;boromir&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;if-else-conditional-on-output-expression&#34;&gt;if-else conditional on output expression&lt;/h3&gt;
&lt;p&gt;In the previous example, you used an if conditional statement in the predicate expression part of a list comprehension to evaluate an iterator variable. In this exercise, you will use an if-else statement on the output expression of the list.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[ output expression true if condition else output expression false for iterator variable in iterable if predicate expression ].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create a list of strings: fellowship
fellowship = [&#39;frodo&#39;, &#39;samwise&#39;, &#39;merry&#39;, &#39;aragorn&#39;, &#39;legolas&#39;, &#39;boromir&#39;, &#39;gimli&#39;]

# Create list comprehension: new_fellowship
new_fellowship = [member if len(member)&amp;gt;=7 else &#39;&#39; for member in fellowship]

# Print the new list
print(new_fellowship)

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[&#39;&#39;, &#39;samwise&#39;, &#39;&#39;, &#39;aragorn&#39;, &#39;legolas&#39;, &#39;boromir&#39;, &#39;&#39;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Load data in chunks</title>
      <link>http://othrif.github.io/technical_note/python/pandas/file_chunks/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/file_chunks/</guid>
      <description>&lt;h3 id=&#34;loading-data-in-chunks&#34;&gt;Loading data in chunks&lt;/h3&gt;
&lt;p&gt;the data we have to process reaches a size that is too much for a computer&amp;rsquo;s memory to handle. A solution to this is to process an entire data source chunk by chunk, instead of a single go all at once.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
def count_entries(csv_file, c_size, colname):
    &amp;quot;&amp;quot;&amp;quot;Return a dictionary with counts of
    occurrences as value for each key.&amp;quot;&amp;quot;&amp;quot;
    
    # Initialize an empty dictionary: counts_dict
    counts_dict = {}

    # Iterate over the file chunk by chunk
    for chunk in pd.read_csv(csv_file, chunksize=c_size):

        # Iterate over the column in DataFrame
        for entry in chunk[colname]:
            if entry in counts_dict.keys():
                counts_dict[entry] += 1
            else:
                counts_dict[entry] = 1

    # Return counts_dict
    return counts_dict
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;result_counts = count_entries(csv_file=&#39;../datasets/tweets.csv&#39;,c_size=10, colname=&#39;lang&#39;)
print(result_counts)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;{&#39;en&#39;: 97, &#39;et&#39;: 1, &#39;und&#39;: 2}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Loops with DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/loops/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/loops/</guid>
      <description>&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
cars2 = cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;loop-over-dataframe&#34;&gt;Loop over DataFrame&lt;/h3&gt;
&lt;p&gt;Iterating over a Pandas DataFrame is typically done with the &lt;code&gt;iterrows()&lt;/code&gt;  &lt;br&gt;
On every run, a Pandas Series is generated.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for lab, row in cars.iterrows() :
    print(lab)
    print(row)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US
country         United States
drives_right             True
cars_per_cap              809
Name: US, dtype: object
AUS
country         Australia
drives_right        False
cars_per_cap          731
Name: AUS, dtype: object
JPN
country         Japan
drives_right    False
cars_per_cap      588
Name: JPN, dtype: object
IN
country         India
drives_right    False
cars_per_cap       18
Name: IN, dtype: object
RU
country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
MOR
country         Morocco
drives_right       True
cars_per_cap         70
Name: MOR, dtype: object
EG
country         Egypt
drives_right     True
cars_per_cap       45
Name: EG, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Pick a specific element in the series
for lab, row in cars.iterrows() :
    print(lab+&#39;:&#39;+str(row[&#39;cars_per_cap&#39;]))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US:809
AUS:731
JPN:588
IN:18
RU:200
MOR:70
EG:45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;add-a-new-column-with-for-loop&#34;&gt;Add a new column with for-loop&lt;/h3&gt;
&lt;p&gt;Adding a new column with for-loop is not very efficient. On every iteration, you&amp;rsquo;re creating a new Pandas Series.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for lab,row in cars.iterrows():
    cars.loc[lab,&#39;COUNTRY&#39;] = row[&#39;country&#39;].upper()
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY
US   United States          True           809  UNITED STATES
AUS      Australia         False           731      AUSTRALIA
JPN          Japan         False           588          JAPAN
IN           India         False            18          INDIA
RU          Russia          True           200         RUSSIA
MOR        Morocco          True            70        MOROCCO
EG           Egypt          True            45          EGYPT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars2[&#39;COUNTRY&#39;] = cars[&#39;country&#39;].apply(str.upper)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY
US   United States          True           809  UNITED STATES
AUS      Australia         False           731      AUSTRALIA
JPN          Japan         False           588          JAPAN
IN           India         False            18          INDIA
RU          Russia          True           200         RUSSIA
MOR        Morocco          True            70        MOROCCO
EG           Egypt          True            45          EGYPT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars2[&#39;Length&#39;] = cars[&#39;country&#39;].apply(len)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY  Length
US   United States          True           809  UNITED STATES      13
AUS      Australia         False           731      AUSTRALIA       9
JPN          Japan         False           588          JAPAN       5
IN           India         False            18          INDIA       5
RU          Russia          True           200         RUSSIA       6
MOR        Morocco          True            70        MOROCCO       7
EG           Egypt          True            45          EGYPT       5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Matplotlib with pandas</title>
      <link>http://othrif.github.io/technical_note/python/pandas/plotpandas/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/plotpandas/</guid>
      <description>&lt;h3 id=&#34;get-data-from-csv&#34;&gt;Get data from csv&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
avocados = pd.read_csv(&#39;avocado.csv&#39;,index_col=0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Date&lt;/th&gt;
      &lt;th&gt;AveragePrice&lt;/th&gt;
      &lt;th&gt;Total Volume&lt;/th&gt;
      &lt;th&gt;4046&lt;/th&gt;
      &lt;th&gt;4225&lt;/th&gt;
      &lt;th&gt;4770&lt;/th&gt;
      &lt;th&gt;Total Bags&lt;/th&gt;
      &lt;th&gt;Small Bags&lt;/th&gt;
      &lt;th&gt;Large Bags&lt;/th&gt;
      &lt;th&gt;XLarge Bags&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;year&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2015-12-27&lt;/td&gt;
      &lt;td&gt;1.33&lt;/td&gt;
      &lt;td&gt;64236.62&lt;/td&gt;
      &lt;td&gt;1036.74&lt;/td&gt;
      &lt;td&gt;54454.85&lt;/td&gt;
      &lt;td&gt;48.16&lt;/td&gt;
      &lt;td&gt;8696.87&lt;/td&gt;
      &lt;td&gt;8603.62&lt;/td&gt;
      &lt;td&gt;93.25&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;conventional&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Albany&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2015-12-20&lt;/td&gt;
      &lt;td&gt;1.35&lt;/td&gt;
      &lt;td&gt;54876.98&lt;/td&gt;
      &lt;td&gt;674.28&lt;/td&gt;
      &lt;td&gt;44638.81&lt;/td&gt;
      &lt;td&gt;58.33&lt;/td&gt;
      &lt;td&gt;9505.56&lt;/td&gt;
      &lt;td&gt;9408.07&lt;/td&gt;
      &lt;td&gt;97.49&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;conventional&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Albany&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2015-12-13&lt;/td&gt;
      &lt;td&gt;0.93&lt;/td&gt;
      &lt;td&gt;118220.22&lt;/td&gt;
      &lt;td&gt;794.70&lt;/td&gt;
      &lt;td&gt;109149.67&lt;/td&gt;
      &lt;td&gt;130.50&lt;/td&gt;
      &lt;td&gt;8145.35&lt;/td&gt;
      &lt;td&gt;8042.21&lt;/td&gt;
      &lt;td&gt;103.14&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;conventional&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Albany&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2015-12-06&lt;/td&gt;
      &lt;td&gt;1.08&lt;/td&gt;
      &lt;td&gt;78992.15&lt;/td&gt;
      &lt;td&gt;1132.00&lt;/td&gt;
      &lt;td&gt;71976.41&lt;/td&gt;
      &lt;td&gt;72.58&lt;/td&gt;
      &lt;td&gt;5811.16&lt;/td&gt;
      &lt;td&gt;5677.40&lt;/td&gt;
      &lt;td&gt;133.76&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;conventional&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Albany&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2015-11-29&lt;/td&gt;
      &lt;td&gt;1.28&lt;/td&gt;
      &lt;td&gt;51039.60&lt;/td&gt;
      &lt;td&gt;941.48&lt;/td&gt;
      &lt;td&gt;43838.39&lt;/td&gt;
      &lt;td&gt;75.78&lt;/td&gt;
      &lt;td&gt;6183.95&lt;/td&gt;
      &lt;td&gt;5986.26&lt;/td&gt;
      &lt;td&gt;197.69&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;conventional&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;Albany&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.columns
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Index([&#39;Date&#39;, &#39;AveragePrice&#39;, &#39;Total Volume&#39;, &#39;4046&#39;, &#39;4225&#39;, &#39;4770&#39;,
       &#39;Total Bags&#39;, &#39;Small Bags&#39;, &#39;Large Bags&#39;, &#39;XLarge Bags&#39;, &#39;type&#39;, &#39;year&#39;,
       &#39;region&#39;],
      dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;plot-data-with-bar&#34;&gt;Plot data with bar&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib.pyplot as plt
# Get the total number of avocados sold of each size
nb_sold_by_type = avocados.groupby(&#39;type&#39;)[&#39;Total Volume&#39;].sum()

# Create a bar plot of the number of avocados sold by size
nb_sold_by_type.plot(kind=&#39;bar&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1163b2a58&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;plotPandas_6_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;plot-data-with-line&#34;&gt;Plot data with line&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Get the total number of avocados sold on each date
nb_sold_by_date = avocados.groupby(&#39;Date&#39;)[&#39;Total Bags&#39;].sum()

# Create a line plot of the number of avocados sold by date
nb_sold_by_date.plot(kind=&#39;line&#39;)

# Show the plot
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;plotPandas_8_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;plot-with-scatter&#34;&gt;Plot with scatter&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Scatter plot of nb_sold vs avg_price with title
avocados.plot(x=&#39;Total Volume&#39;, y=&#39;AveragePrice&#39;, kind=&#39;scatter&#39;, title=&#39;Number of avocados sold vs. average price&#39;)

# Show the plot
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;plotPandas_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;plot-with-histograms&#34;&gt;Plot with histograms&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Histogram of conventional avg_price 
avocados[avocados[&#39;type&#39;]==&#39;conventional&#39;][&#39;AveragePrice&#39;].hist(alpha=0.7, bins=20)

# Histogram of organic avg_price
avocados[avocados[&#39;type&#39;]==&#39;organic&#39;][&#39;AveragePrice&#39;].hist(alpha=0.7, bins=20)

# Add a legend
plt.legend([&#39;conventional&#39;,&#39;organic&#39;])

# Show the plot
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;plotPandas_12_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Missing data with pandas</title>
      <link>http://othrif.github.io/technical_note/python/pandas/missingdata/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/missingdata/</guid>
      <description>&lt;p&gt;This deals with &lt;code&gt;NaN&lt;/code&gt; = Not a Number&lt;/p&gt;
&lt;h3 id=&#34;get-data-from-csv&#34;&gt;Get data from csv&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
avocados = pd.read_csv(&#39;avocado.csv&#39;,index_col=0)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;artifically-delete-some-data&#34;&gt;artifically delete some data&lt;/h3&gt;
&lt;p&gt;Delete 100 &lt;code&gt;AveragePrice&lt;/code&gt; values at random rows&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
for i in range(100):
    idx=np.random.randint(0,avocados.shape[0])
    avocados.iloc[idx,1]=np.NaN
    avocados.iloc[idx,-4]=np.NaN

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;check-for-missing-values-with-isna&#34;&gt;Check for missing values with &lt;code&gt;isna()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.isna()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Date&lt;/th&gt;
      &lt;th&gt;AveragePrice&lt;/th&gt;
      &lt;th&gt;Total Volume&lt;/th&gt;
      &lt;th&gt;4046&lt;/th&gt;
      &lt;th&gt;4225&lt;/th&gt;
      &lt;th&gt;4770&lt;/th&gt;
      &lt;th&gt;Total Bags&lt;/th&gt;
      &lt;th&gt;Small Bags&lt;/th&gt;
      &lt;th&gt;Large Bags&lt;/th&gt;
      &lt;th&gt;XLarge Bags&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;year&lt;/th&gt;
      &lt;th&gt;region&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;18249 rows × 13 columns&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;add-any&#34;&gt;Add &lt;code&gt;any()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.isna().any()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Date            False
AveragePrice     True
Total Volume    False
4046            False
4225            False
4770            False
Total Bags      False
Small Bags      False
Large Bags      False
XLarge Bags      True
type            False
year            False
region          False
dtype: bool
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;use-counts&#34;&gt;Use counts&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.isna().sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Date              0
AveragePrice    100
Total Volume      0
4046              0
4225              0
4770              0
Total Bags        0
Small Bags        0
Large Bags        0
XLarge Bags     100
type              0
year              0
region            0
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;plot-it&#34;&gt;Plot it!&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib.pyplot as plt
avocados.isna().sum().plot(kind=&#39;bar&#39;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;missingdata_13_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;remove-the-rows-that-have-nan&#34;&gt;Remove the rows that have NaN&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(18249, 13)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados_drop=avocados.dropna()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados_drop.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(18149, 13)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;replace-the-nan-with-a-value&#34;&gt;Replace the NaN with a value&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados_rep=avocados.fillna(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;avocados_rep.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(18249, 13)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Reading and writing CSVs</title>
      <link>http://othrif.github.io/technical_note/python/pandas/handlecsv/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/handlecsv/</guid>
      <description>&lt;p&gt;CSV = comma-seperated-values&lt;/p&gt;
&lt;h4 id=&#34;csv-to-dataframe&#34;&gt;CSV to DataFrame&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
cars = pd.read_csv(&#39;cars.csv&#39;,index_col=0)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;manipulate-dataframe&#34;&gt;Manipulate DataFrame&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
cars[&#39;cars_rand&#39;] = cars[&#39;cars_per_cap&#39;]*np.random.randint(0,10)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap  cars_rand
0  United States          True           809       3236
1      Australia         False           731       2924
2          Japan         False           588       2352
3          India         False            18         72
4         Russia          True           200        800
5        Morocco          True            70        280
6          Egypt          True            45        180
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dataframe-to-csv&#34;&gt;DataFrame to csv&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.to_csv(&#39;cars.csv&#39;)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap  cars_rand
0  United States          True           809       3236
1      Australia         False           731       2924
2          Japan         False           588       2352
3          India         False            18         72
4         Russia          True           200        800
5        Morocco          True            70        280
6          Egypt          True            45        180
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Slicing and subsetting with .loc and .iloc</title>
      <link>http://othrif.github.io/technical_note/python/pandas/indexlociloc/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/indexlociloc/</guid>
      <description>&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1919.66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1935.55&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;loc&#34;&gt;&lt;code&gt;loc[]&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;DataFrames can be sliced by index values using &lt;code&gt;loc[]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can only slice an index if the index is sorted (using .sort_index())&lt;/li&gt;
&lt;li&gt;To slice at the outer level, first and last can be strings&lt;/li&gt;
&lt;li&gt;To slice at inner levels, first and last should be tuples&lt;/li&gt;
&lt;li&gt;If you pass a single slice to .loc[], it will slice the rows&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_srt = df.set_index([&#39;type&#39;,&#39;department&#39;]).sort_index()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_srt.loc[&#39;A&#39;:&#39;B&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2747.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;6311.98&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;20094.2&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2215.12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2011-01-07&lt;/td&gt;
      &lt;td&gt;15984.2&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1762.05&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5335.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;5&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-11-05&lt;/td&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;9775.17&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1077.58&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;39773.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;4384.53&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;29967.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3303.57&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;317.062&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;93 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_srt.loc[(&#39;A&#39;,2):(&#39;B&#39;,1)]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;8&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5335.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;47450.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5230.79&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;47903&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5280.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;48754.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5374.54&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-07-02&lt;/td&gt;
      &lt;td&gt;47077.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5189.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;25435&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2803.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;27588.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3041.25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;3&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-11-05&lt;/td&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;85 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_srt.loc[(&#39;A&#39;,2):(&#39;B&#39;,1),[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;8&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;5335.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47450.5&lt;/td&gt;
      &lt;td&gt;5230.79&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47903&lt;/td&gt;
      &lt;td&gt;5280.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;48754.5&lt;/td&gt;
      &lt;td&gt;5374.54&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47077.7&lt;/td&gt;
      &lt;td&gt;5189.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;25435&lt;/td&gt;
      &lt;td&gt;2803.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;27588.3&lt;/td&gt;
      &lt;td&gt;3041.25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;3&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;85 rows × 2 columns&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_srt.loc[(&#39;A&#39;,2):(&#39;B&#39;,1),&#39;weekly_sales&#39;:&#39;frac_sales&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;8&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5335.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47450.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5230.79&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47903&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5280.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;48754.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5374.54&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;47077.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;5189.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;25435&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;2803.87&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;27588.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3041.25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;3&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;2406.24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;1790.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;34238.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;3774.38&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;85 rows × 3 columns&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;iloc&#34;&gt;&lt;code&gt;iloc[]&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.iloc[:5,2:3]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Slicing time series</title>
      <link>http://othrif.github.io/technical_note/python/pandas/slicetimeseries/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/slicetimeseries/</guid>
      <description>&lt;p&gt;Add the date column to the index, then use &lt;code&gt;.loc[]&lt;/code&gt; to perform the subsetting. The important thing to remember is to keep your dates in ISO 8601 format, that is, &lt;code&gt;yyyy-mm-dd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Important:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When filtering with &lt;code&gt;[]&lt;/code&gt; between &lt;code&gt;2010&lt;/code&gt; and &lt;code&gt;2012&lt;/code&gt;, the dates go from &lt;code&gt;2010-01-01&lt;/code&gt; to &lt;code&gt;2012-01-01&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When filter with &lt;code&gt;.loc[]&lt;/code&gt; is inclusive in dates, see the two cases below&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;The time range below gives january-february, Note the real range is &lt;code&gt;2010-01-01&lt;/code&gt; to &lt;code&gt;2010-03-01&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[ (&#39;2010-01&#39; &amp;lt;= df[&#39;date&#39;]) &amp;amp; (df[&#39;date&#39;] &amp;lt; &#39;2010-03&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;24&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;13740.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;36&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;39954&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;48&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;32229.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;60&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;5749.03&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;72&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;21084.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;84&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;40129&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;96&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;16931&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_ind = df.set_index(&#39;date&#39;).sort_index()
df_ind.loc[&#39;2010-01&#39;:&#39;2010-03&#39;] # loc is inclusive in dates
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;16931&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;40129&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;21084.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;5749.03&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;32229.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;39954&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-02-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;13740.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;24064.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;38776.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;19659.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;4221.25&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;38086.2&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12275.6&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;23082.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2010-03-05&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;48398&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sort DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/sortdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/sortdf/</guid>
      <description>&lt;p&gt;Most common types of data manipulation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sorting rows&lt;/li&gt;
&lt;li&gt;subsetting columns&lt;/li&gt;
&lt;li&gt;subsetting rows&lt;/li&gt;
&lt;li&gt;adding new columns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sorting-row&#34;&gt;Sorting row&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.sort_values(&#39;cars_per_cap&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.sort_values([&#39;drives_right&#39;,&#39;cars_per_cap&#39;], ascending=[True,False])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;subsetting-columns&#34;&gt;subsetting columns&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[&#39;country&#39;].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US     United States
AUS        Australia
JPN            Japan
IN             India
RU            Russia
Name: country, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[[&#39;country&#39;,&#39;cars_per_cap&#39;]].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;subsetting-rows&#34;&gt;subsetting rows&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;cars_per_cap&#39;]&amp;lt;100].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;subsetting-by-categorical-variables&#34;&gt;Subsetting by categorical variables&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.isin()&lt;/code&gt; one condition instead of several &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;country&#39;].isin([&#39;Morocco&#39;,&#39;Egypt&#39;])]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;adding-new-columns&#34;&gt;adding new columns&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[&#39;cars_per_cap_10&#39;] = cars[&#39;cars_per_cap&#39;]*10
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
      &lt;th&gt;cars_per_cap_10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
      &lt;td&gt;8090&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
      &lt;td&gt;7310&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
      &lt;td&gt;5880&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
      &lt;td&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
