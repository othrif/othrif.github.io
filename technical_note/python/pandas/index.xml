<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical notes | Othmane Rifki</title>
    <link>http://othrif.github.io/technical_note/python/pandas/</link>
      <atom:link href="http://othrif.github.io/technical_note/python/pandas/index.xml" rel="self" type="application/rss+xml" />
    <description>Technical notes</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 08 Apr 2020 22:44:12 +0200</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Technical notes</title>
      <link>http://othrif.github.io/technical_note/python/pandas/</link>
    </image>
    
    <item>
      <title>Boolean operators with Pandas</title>
      <link>http://othrif.github.io/technical_note/python/pandas/boolean_manip/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/boolean_manip/</guid>
      <description>&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
cpc = cars[&#39;cars_per_cap&#39;]
between = np.logical_and(cpc&amp;gt;100,cpc&amp;lt;500)
medium = cars[between]
print(medium)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   country  drives_right  cars_per_cap
RU  Russia          True           200
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames basics</title>
      <link>http://othrif.github.io/technical_note/python/pandas/dataframe/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/dataframe/</guid>
      <description>&lt;h3 id=&#34;dataframes&#34;&gt;DataFrames&lt;/h3&gt;
&lt;p&gt;store tabular data where you can label the rows and the columns.&lt;/p&gt;
&lt;h4 id=&#34;dataframe-from-dictionary&#34;&gt;DataFrame from dictionary&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
cars_dict = { &#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;set-the-row-attribute&#34;&gt;Set the row attribute&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Definition of row_labels
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]

# Specify row labels of cars
cars.index = row_labels
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;useful-exploration&#34;&gt;Useful exploration&lt;/h3&gt;
&lt;h4 id=&#34;methods&#34;&gt;Methods&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.head()&lt;/code&gt; first few rows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.info()&lt;/code&gt; name of columns, data type and number of missing values&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.describe()&lt;/code&gt; summary statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;attributes&#34;&gt;Attributes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.shape&lt;/code&gt; attribute for rows x columns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.values&lt;/code&gt; converts to a 2D numpy array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.columns&lt;/code&gt; An index of columns: the column names.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.index&lt;/code&gt; An index for the rows: either row numbers or row names&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.info()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
Int64Index: 7 entries, 0 to 6
Data columns (total 3 columns):
 #   Column        Non-Null Count  Dtype 
---  ------        --------------  ----- 
 0   country       7 non-null      object
 1   drives_right  7 non-null      bool  
 2   cars_per_cap  7 non-null      int64 
dtypes: bool(1), int64(1), object(1)
memory usage: 175.0+ bytes
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(7, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.describe()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;351.571429&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;345.595552&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;57.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;200.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;659.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;809.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.values
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;array([[&#39;United States&#39;, True, 809],
       [&#39;Australia&#39;, False, 731],
       [&#39;Japan&#39;, False, 588],
       [&#39;India&#39;, False, 18],
       [&#39;Russia&#39;, True, 200],
       [&#39;Morocco&#39;, True, 70],
       [&#39;Egypt&#39;, True, 45]], dtype=object)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.columns
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Index([&#39;country&#39;, &#39;drives_right&#39;, &#39;cars_per_cap&#39;], dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.index
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Int64Index([0, 1, 2, 3, 4, 5, 6], dtype=&#39;int64&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;save-to-csv&#34;&gt;Save to csv&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print cars again
print(cars)
cars.to_csv(&#39;cars.csv&#39;,index=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;read-csv&#34;&gt;Read csv&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Import pandas as pd
import pandas as pd

# Import the cars.csv data: cars
cars = pd.read_csv(&#39;cars.csv&#39;)

# Print out cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   Unnamed: 0        country  drives_right  cars_per_cap
0           0  United States          True           809
1           1      Australia         False           731
2           2          Japan         False           588
3           3          India         False            18
4           4         Russia          True           200
5           5        Morocco          True            70
6           6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#Fix import by including index_col
cars = pd.read_csv(&#39;cars.csv&#39;,index_col=0)

# Print out cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         country  drives_right  cars_per_cap
0  United States          True           809
1      Australia         False           731
2          Japan         False           588
3          India         False            18
4         Russia          True           200
5        Morocco          True            70
6          Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames counting</title>
      <link>http://othrif.github.io/technical_note/python/pandas/countingdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/countingdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;27010.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8282.67&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;drop-duplicates-with-drop_duplicates&#34;&gt;Drop duplicates with &lt;code&gt;.drop_duplicates()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.drop_duplicates(subset=&#39;type&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.drop_duplicates(subset=[&#39;type&#39;,&#39;is_holiday&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;11757.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;10296.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;8214.67&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;16241.8&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7661.72&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-10-01&lt;/td&gt;
      &lt;td&gt;20094.2&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;9479.02&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;23872&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique = df.drop_duplicates(subset=[&#39;type&#39;,&#39;is_holiday&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;count-with-value_counts&#34;&gt;Count with &lt;code&gt;.value_counts()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    2
A    2
B    2
Name: type, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts(sort=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    2
A    2
B    2
Name: type, dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_unique[&#39;type&#39;].value_counts(normalize=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C    0.333333
A    0.333333
B    0.333333
Name: type, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;grouping-with-groupby&#34;&gt;Grouping with &lt;code&gt;.groupby()&lt;/code&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].min()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    1376.15
B    2876.19
C    7857.88
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example of how much the syntax gets simplified with &lt;code&gt;.groupby()&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Calc total weekly sales
sales_all = df[&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type A stores, calc total weekly sales
sales_A = df[df[&amp;quot;type&amp;quot;] == &amp;quot;A&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type B stores, calc total weekly sales
sales_B = df[df[&amp;quot;type&amp;quot;] == &amp;quot;B&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

# Subset for type C stores, calc total weekly sales
sales_C = df[df[&amp;quot;type&amp;quot;] == &amp;quot;C&amp;quot;][&amp;quot;weekly_sales&amp;quot;].sum()

print(&#39;all=&#39;, sales_all)
print(&#39;A &#39;, sales_A)
print(&#39;B &#39;, sales_B)
print(&#39;C &#39;, sales_C)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;all= 2629115.29
A  2324619.4500000007
B  154701.55
C  149794.29
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    2324619.45
B     154701.55
C     149794.29
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&#39;A &#39;, sales_A/sales_all)
print(&#39;B &#39;, sales_B/sales_all)
print(&#39;C &#39;, sales_C/sales_all)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;A  0.8841831542503412
B  0.05884167597686444
C  0.056975169772794564
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&amp;quot;type&amp;quot;)[&amp;quot;weekly_sales&amp;quot;].sum()/df[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type
A    0.884183
B    0.058842
C    0.056975
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;multiple-categories&#34;&gt;Multiple categories&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby([&#39;type&#39;,&#39;is_holiday&#39;])[&#39;weekly_sales&#39;].sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;type  is_holiday
A     False         2248771.03
      True            75848.42
B     False          132873.65
      True            21827.90
C     False           91331.14
      True            58463.15
Name: weekly_sales, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;multiple-grouped-summaries&#34;&gt;Multiple grouped summaries&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[&#39;weekly_sales&#39;].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby(&#39;type&#39;)[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;weekly_sales&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;1141.613223&lt;/td&gt;
      &lt;td&gt;47499.895208&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;2386.001914&lt;/td&gt;
      &lt;td&gt;32995.090104&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
      &lt;td&gt;6518.664179&lt;/td&gt;
      &lt;td&gt;41980.631009&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames manipulation</title>
      <link>http://othrif.github.io/technical_note/python/pandas/sortdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/sortdf/</guid>
      <description>&lt;p&gt;Most common types of data manipulation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sorting rows&lt;/li&gt;
&lt;li&gt;subsetting columns&lt;/li&gt;
&lt;li&gt;subsetting rows&lt;/li&gt;
&lt;li&gt;adding new columns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sorting-row&#34;&gt;Sorting row&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.sort_values(&#39;cars_per_cap&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.sort_values([&#39;drives_right&#39;,&#39;cars_per_cap&#39;], ascending=[True,False])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;subsetting-columns&#34;&gt;subsetting columns&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[&#39;country&#39;].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US     United States
AUS        Australia
JPN            Japan
IN             India
RU            Russia
Name: country, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[[&#39;country&#39;,&#39;cars_per_cap&#39;]].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;subsetting-rows&#34;&gt;subsetting rows&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;cars_per_cap&#39;]&amp;lt;100].head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;subsetting-by-categorical-variables&#34;&gt;Subsetting by categorical variables&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.isin()&lt;/code&gt; one condition instead of several &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[cars[&#39;country&#39;].isin([&#39;Morocco&#39;,&#39;Egypt&#39;])]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;adding-new-columns&#34;&gt;adding new columns&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars[&#39;cars_per_cap_10&#39;] = cars[&#39;cars_per_cap&#39;]*10
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
      &lt;th&gt;cars_per_cap_10&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
      &lt;td&gt;8090&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
      &lt;td&gt;7310&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
      &lt;td&gt;5880&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
      &lt;td&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames pivot tables</title>
      <link>http://othrif.github.io/technical_note/python/pandas/pivotdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/pivotdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, True],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, True],[1, &#39;B&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;C&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;C&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, True],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;C&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, True],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;B&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;B&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;B&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;B&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;13457.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;11785.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;30915&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9402.16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9479.98&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.groupby([&#39;type&#39;,&#39;is_holiday&#39;])[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;weekly_sales&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
      &lt;th&gt;amin&lt;/th&gt;
      &lt;th&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=[&#39;weekly_sales&#39;,&#39;frac_sales&#39;], index=[&#39;type&#39;,&#39;is_holiday&#39;],aggfunc=[np.min,np.max])
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amin&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;add-margins&#34;&gt;Add margins&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.pivot_table(values=[&#39;weekly_sales&#39;,&#39;frac_sales&#39;], index=[&#39;type&#39;,&#39;is_holiday&#39;],aggfunc=[np.min,np.max], margins=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amin&lt;/th&gt;
      &lt;th colspan=&#34;2&#34; halign=&#34;left&#34;&gt;amax&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;A&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;5060.573245&lt;/td&gt;
      &lt;td&gt;9372.80&lt;/td&gt;
      &lt;td&gt;25042.316460&lt;/td&gt;
      &lt;td&gt;46381.43&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;B&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;1552.915901&lt;/td&gt;
      &lt;td&gt;2876.19&lt;/td&gt;
      &lt;td&gt;21474.668474&lt;/td&gt;
      &lt;td&gt;39773.71&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
      &lt;td&gt;11785.345546&lt;/td&gt;
      &lt;td&gt;21827.90&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th rowspan=&#34;2&#34; valign=&#34;top&#34;&gt;C&lt;/th&gt;
      &lt;th&gt;False&lt;/th&gt;
      &lt;td&gt;8818.608237&lt;/td&gt;
      &lt;td&gt;16333.14&lt;/td&gt;
      &lt;td&gt;12157.707587&lt;/td&gt;
      &lt;td&gt;22517.56&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;True&lt;/th&gt;
      &lt;td&gt;4242.635849&lt;/td&gt;
      &lt;td&gt;7857.88&lt;/td&gt;
      &lt;td&gt;27322.857141&lt;/td&gt;
      &lt;td&gt;50605.27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;All&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;td&gt;743.012533&lt;/td&gt;
      &lt;td&gt;1376.15&lt;/td&gt;
      &lt;td&gt;30915.039145&lt;/td&gt;
      &lt;td&gt;57258.43&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>DataFrames statistics</title>
      <link>http://othrif.github.io/technical_note/python/pandas/statdf/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/statdf/</guid>
      <description>&lt;p&gt;Most common summary statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.mean()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.std()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.var()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.median()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.mode()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.min()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.max()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.quantile()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from pandas import Timestamp

mycols = [&#39;store&#39;, &#39;type&#39;, &#39;department&#39;, &#39;date&#39;, &#39;weekly_sales&#39;, &#39;is_holiday&#39;]
content = np.array([[1, &#39;A&#39;, 1, Timestamp(&#39;2010-02-05 00:00:00&#39;), 24924.5, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-03-05 00:00:00&#39;), 21827.9, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-04-02 00:00:00&#39;), 57258.43, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-05-07 00:00:00&#39;), 17413.94, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-06-04 00:00:00&#39;), 17558.09, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-07-02 00:00:00&#39;), 16333.14, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-08-06 00:00:00&#39;), 17508.41, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-09-03 00:00:00&#39;), 16241.78, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-10-01 00:00:00&#39;), 20094.19, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-11-05 00:00:00&#39;), 34238.88, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2010-12-03 00:00:00&#39;), 22517.56, False],[1, &#39;A&#39;, 1, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15984.24, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-02-05 00:00:00&#39;), 50605.27, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-03-05 00:00:00&#39;), 48397.98, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-04-02 00:00:00&#39;), 47450.5, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-05-07 00:00:00&#39;), 47903.01, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-06-04 00:00:00&#39;), 48754.47, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-07-02 00:00:00&#39;), 47077.72, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-08-06 00:00:00&#39;), 50031.73, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-09-03 00:00:00&#39;), 49015.05, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-10-01 00:00:00&#39;), 45829.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-11-05 00:00:00&#39;), 46381.43, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2010-12-03 00:00:00&#39;), 44405.02, False],[1, &#39;A&#39;, 2, Timestamp(&#39;2011-01-07 00:00:00&#39;), 43202.29, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-02-05 00:00:00&#39;), 13740.12, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-03-05 00:00:00&#39;), 12275.58, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-04-02 00:00:00&#39;), 11157.08, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-05-07 00:00:00&#39;), 9372.8, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-06-04 00:00:00&#39;), 8001.41, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-07-02 00:00:00&#39;), 7857.88, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-08-06 00:00:00&#39;), 26719.02, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-09-03 00:00:00&#39;), 19081.8, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-10-01 00:00:00&#39;), 9775.17, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-11-05 00:00:00&#39;), 9825.22, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2010-12-03 00:00:00&#39;), 10856.85, False],[1, &#39;A&#39;, 3, Timestamp(&#39;2011-01-07 00:00:00&#39;), 15808.15, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-02-05 00:00:00&#39;), 39954.04, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38086.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-04-02 00:00:00&#39;), 37809.49, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-05-07 00:00:00&#39;), 37168.34, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-06-04 00:00:00&#39;), 40548.19, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-07-02 00:00:00&#39;), 39773.71, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-08-06 00:00:00&#39;), 40973.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-09-03 00:00:00&#39;), 38321.88, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34912.45, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-11-05 00:00:00&#39;), 37980.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2010-12-03 00:00:00&#39;), 37110.55, False],[1, &#39;A&#39;, 4, Timestamp(&#39;2011-01-07 00:00:00&#39;), 37947.8, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-02-05 00:00:00&#39;), 32229.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-03-05 00:00:00&#39;), 23082.14, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-04-02 00:00:00&#39;), 29967.92, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-05-07 00:00:00&#39;), 19260.44, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-06-04 00:00:00&#39;), 22932.26, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-07-02 00:00:00&#39;), 18887.71, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-08-06 00:00:00&#39;), 16926.17, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-09-03 00:00:00&#39;), 15390.52, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-10-01 00:00:00&#39;), 23381.38, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-11-05 00:00:00&#39;), 23903.81, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36472.02, False],[1, &#39;A&#39;, 5, Timestamp(&#39;2011-01-07 00:00:00&#39;), 22699.69, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-02-05 00:00:00&#39;), 5749.03, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-03-05 00:00:00&#39;), 4221.25, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-04-02 00:00:00&#39;), 4132.61, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-05-07 00:00:00&#39;), 7477.7, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-06-04 00:00:00&#39;), 5484.9, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-07-02 00:00:00&#39;), 4541.91, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-08-06 00:00:00&#39;), 4700.38, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-09-03 00:00:00&#39;), 3553.75, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-10-01 00:00:00&#39;), 2876.19, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-11-05 00:00:00&#39;), 5036.99, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2010-12-03 00:00:00&#39;), 6356.96, False],[1, &#39;A&#39;, 6, Timestamp(&#39;2011-01-07 00:00:00&#39;), 1376.15, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-02-05 00:00:00&#39;), 21084.08, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-03-05 00:00:00&#39;), 19659.7, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-04-02 00:00:00&#39;), 22427.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-05-07 00:00:00&#39;), 20457.62, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-06-04 00:00:00&#39;), 44563.68, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-07-02 00:00:00&#39;), 22589.0, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-08-06 00:00:00&#39;), 21842.57, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-09-03 00:00:00&#39;), 18005.65, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-10-01 00:00:00&#39;), 16481.79, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-11-05 00:00:00&#39;), 19136.58, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2010-12-03 00:00:00&#39;), 47406.83, False],[1, &#39;A&#39;, 7, Timestamp(&#39;2011-01-07 00:00:00&#39;), 17516.16, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-02-05 00:00:00&#39;), 40129.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-03-05 00:00:00&#39;), 38776.09, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-04-02 00:00:00&#39;), 38151.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-05-07 00:00:00&#39;), 35393.78, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-06-04 00:00:00&#39;), 35181.47, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-07-02 00:00:00&#39;), 35580.01, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-08-06 00:00:00&#39;), 34833.35, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-09-03 00:00:00&#39;), 35562.68, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-10-01 00:00:00&#39;), 34658.25, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-11-05 00:00:00&#39;), 36182.58, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2010-12-03 00:00:00&#39;), 36222.74, False],[1, &#39;A&#39;, 8, Timestamp(&#39;2011-01-07 00:00:00&#39;), 36599.46, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-02-05 00:00:00&#39;), 16930.99, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-03-05 00:00:00&#39;), 24064.7, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-04-02 00:00:00&#39;), 25435.02, False],[1, &#39;A&#39;, 9, Timestamp(&#39;2010-05-07 00:00:00&#39;), 27588.34, False]])
df = pd.DataFrame(content, columns=mycols)
df[&#39;frac_sales&#39;] = df[&#39;weekly_sales&#39;]*np.random.rand()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
      &lt;th&gt;frac_sales&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;24924.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;10462.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-03-05&lt;/td&gt;
      &lt;td&gt;21827.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;9162.84&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;24035.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-05-07&lt;/td&gt;
      &lt;td&gt;17413.9&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7309.96&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;17558.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;7370.47&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;weekly_sales&#39;].mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;26291.1529
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;weekly_sales&#39;].sum()*1e-6 # in millions
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;2.62911529
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.sort_values(&#39;weekly_sales&#39;,ascending=False).head()
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;store&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;department&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;weekly_sales&lt;/th&gt;
      &lt;th&gt;is_holiday&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2010-04-02&lt;/td&gt;
      &lt;td&gt;57258.4&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-02-05&lt;/td&gt;
      &lt;td&gt;50605.3&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-08-06&lt;/td&gt;
      &lt;td&gt;50031.7&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-09-03&lt;/td&gt;
      &lt;td&gt;49015.1&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2010-06-04&lt;/td&gt;
      &lt;td&gt;48754.5&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&#34;efficient-summaries-with-agg&#34;&gt;Efficient summaries with &lt;code&gt;.agg()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;.agg()&lt;/code&gt; method allows you to apply your own custom functions to a DataFrame, as well as apply functions to more than one column of a DataFrame at once, making your aggregations super efficient.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# A custom inter-quartile range function. Alternative to standard deviation that is helpful if your data contains outliers
def iqr(column):
    return column.quantile(0.75) - column.quantile(0.25)

print(iqr(df[&#39;weekly_sales&#39;]))
print(df[&#39;weekly_sales&#39;].agg(iqr))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;21645.687500000004
21645.687500000004
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg(iqr))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;weekly_sales    21645.687500
frac_sales       9086.348194
dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;weekly_sales&#39;,&#39;frac_sales&#39;]].agg([iqr,np.median]))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;        weekly_sales   frac_sales
iqr       21645.6875  9086.348194
median    23231.7600  9752.143956
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cumulative-statistics&#34;&gt;Cumulative statistics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.cumsum()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.cummax()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;cum_weekly_sales&#39;] = df[&#39;weekly_sales&#39;].cumsum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&#39;cum_max_sales&#39;] = df[&#39;weekly_sales&#39;].cummax()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df[[&#39;date&#39;,&#39;weekly_sales&#39;,&#39;cum_weekly_sales&#39;,&#39;cum_max_sales&#39;]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;         date weekly_sales cum_weekly_sales cum_max_sales
0  2010-02-05      24924.5          24924.5       24924.5
1  2010-03-05      21827.9          46752.4       24924.5
2  2010-04-02      57258.4           104011       57258.4
3  2010-05-07      17413.9           121425       57258.4
4  2010-06-04      17558.1           138983       57258.4
..        ...          ...              ...           ...
95 2011-01-07      36599.5       2.5351e+06       57258.4
96 2010-02-05        16931      2.55203e+06       57258.4
97 2010-03-05      24064.7      2.57609e+06       57258.4
98 2010-04-02        25435      2.60153e+06       57258.4
99 2010-05-07      27588.3      2.62912e+06       57258.4

[100 rows x 4 columns]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Indexing and selecting DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/indexselectingdata/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/indexselectingdata/</guid>
      <description>&lt;h3 id=&#34;dataframes&#34;&gt;DataFrames&lt;/h3&gt;
&lt;p&gt;store tabular data where you can label the rows and the columns.&lt;/p&gt;
&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;square-brackets&#34;&gt;Square brackets&lt;/h3&gt;
&lt;p&gt;The single bracket version gives a Pandas Series, the double bracket version gives a Pandas DataFrame.&lt;/p&gt;
&lt;h4 id=&#34;columns&#34;&gt;Columns&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out country column as Pandas Series
cars[&#39;country&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US     United States
AUS        Australia
JPN            Japan
IN             India
RU            Russia
MOR          Morocco
EG             Egypt
Name: country, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out country column as Pandas DataFrame
cars[[&#39;country&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out DataFrame with country and drives_right columns
cars[[&#39;country&#39;,&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;Morocco&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;Egypt&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 id=&#34;rows&#34;&gt;Rows&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out first 3 observations
cars[0:3]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;Japan&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Print out fourth, fifth and sixth observation
print(cars[3:6])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     country  drives_right  cars_per_cap
IN     India         False            18
RU    Russia          True           200
MOR  Morocco          True            70
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;selecting-rows-and-columns-with-loc-and-iloc&#34;&gt;Selecting rows and columns with &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;iloc&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;loc&lt;/code&gt; is label-based, which means that you have to specify rows and columns based on their row and column labels&lt;br&gt;
&lt;code&gt;iloc&lt;/code&gt; is integer index based, so you have to specify rows and columns by their integer index like you did in the previous exercise&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Selecting rows based on index column
# One bracket -&amp;gt; Series
cars.loc[&#39;RU&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.iloc[4]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Two bracket -&amp;gt; DataFrame
cars.loc[[&#39;RU&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[[&#39;RU&#39;, &#39;AUS&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;country&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[:,[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;False&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EG&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[[&#39;US&#39;, &#39;MOR&#39;],[&#39;drives_right&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;drives_right&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;True&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.iloc[0:6,[2]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars.loc[&#39;US&#39;:&#39;MOR&#39;,[&#39;cars_per_cap&#39;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;cars_per_cap&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;US&lt;/th&gt;
      &lt;td&gt;809&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AUS&lt;/th&gt;
      &lt;td&gt;731&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;JPN&lt;/th&gt;
      &lt;td&gt;588&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IN&lt;/th&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;RU&lt;/th&gt;
      &lt;td&gt;200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOR&lt;/th&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Loops with DataFrames</title>
      <link>http://othrif.github.io/technical_note/python/pandas/loops/</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      <guid>http://othrif.github.io/technical_note/python/pandas/loops/</guid>
      <description>&lt;h4 id=&#34;generate-some-data&#34;&gt;Generate some data&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd

# Build cars DataFrame
names = [&#39;United States&#39;, &#39;Australia&#39;, &#39;Japan&#39;, &#39;India&#39;, &#39;Russia&#39;, &#39;Morocco&#39;, &#39;Egypt&#39;]
dr =  [True, False, False, False, True, True, True]
cpc = [809, 731, 588, 18, 200, 70, 45]
row_labels = [&#39;US&#39;, &#39;AUS&#39;, &#39;JPN&#39;, &#39;IN&#39;, &#39;RU&#39;, &#39;MOR&#39;, &#39;EG&#39;]
cars_dict = {&#39;country&#39;:names, &#39;drives_right&#39;:dr, &#39;cars_per_cap&#39;:cpc }
cars = pd.DataFrame(cars_dict)
cars.index = row_labels
cars2 = cars
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap
US   United States          True           809
AUS      Australia         False           731
JPN          Japan         False           588
IN           India         False            18
RU          Russia          True           200
MOR        Morocco          True            70
EG           Egypt          True            45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;loop-over-dataframe&#34;&gt;Loop over DataFrame&lt;/h3&gt;
&lt;p&gt;Iterating over a Pandas DataFrame is typically done with the &lt;code&gt;iterrows()&lt;/code&gt;  &lt;br&gt;
On every run, a Pandas Series is generated.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for lab, row in cars.iterrows() :
    print(lab)
    print(row)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US
country         United States
drives_right             True
cars_per_cap              809
Name: US, dtype: object
AUS
country         Australia
drives_right        False
cars_per_cap          731
Name: AUS, dtype: object
JPN
country         Japan
drives_right    False
cars_per_cap      588
Name: JPN, dtype: object
IN
country         India
drives_right    False
cars_per_cap       18
Name: IN, dtype: object
RU
country         Russia
drives_right      True
cars_per_cap       200
Name: RU, dtype: object
MOR
country         Morocco
drives_right       True
cars_per_cap         70
Name: MOR, dtype: object
EG
country         Egypt
drives_right     True
cars_per_cap       45
Name: EG, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Pick a specific element in the series
for lab, row in cars.iterrows() :
    print(lab+&#39;:&#39;+str(row[&#39;cars_per_cap&#39;]))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;US:809
AUS:731
JPN:588
IN:18
RU:200
MOR:70
EG:45
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;add-a-new-column-with-for-loop&#34;&gt;Add a new column with for-loop&lt;/h3&gt;
&lt;p&gt;Adding a new column with for-loop is not very efficient. On every iteration, you&amp;rsquo;re creating a new Pandas Series.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for lab,row in cars.iterrows():
    cars.loc[lab,&#39;COUNTRY&#39;] = row[&#39;country&#39;].upper()
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY
US   United States          True           809  UNITED STATES
AUS      Australia         False           731      AUSTRALIA
JPN          Japan         False           588          JAPAN
IN           India         False            18          INDIA
RU          Russia          True           200         RUSSIA
MOR        Morocco          True            70        MOROCCO
EG           Egypt          True            45          EGYPT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars2[&#39;COUNTRY&#39;] = cars[&#39;country&#39;].apply(str.upper)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY
US   United States          True           809  UNITED STATES
AUS      Australia         False           731      AUSTRALIA
JPN          Japan         False           588          JAPAN
IN           India         False            18          INDIA
RU          Russia          True           200         RUSSIA
MOR        Morocco          True            70        MOROCCO
EG           Egypt          True            45          EGYPT
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cars2[&#39;Length&#39;] = cars[&#39;country&#39;].apply(len)
print(cars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           country  drives_right  cars_per_cap        COUNTRY  Length
US   United States          True           809  UNITED STATES      13
AUS      Australia         False           731      AUSTRALIA       9
JPN          Japan         False           588          JAPAN       5
IN           India         False            18          INDIA       5
RU          Russia          True           200         RUSSIA       6
MOR        Morocco          True            70        MOROCCO       7
EG           Egypt          True            45          EGYPT       5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
