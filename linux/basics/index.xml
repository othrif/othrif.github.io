<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux - Othmane Rifki</title>
    <link>https://othrif.github.io/linux/basics/index.xml</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2020 14:41:32 +0200</lastBuildDate>
    
        <atom:link href="https://othrif.github.io/linux/basics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access and download files via sftp</title>
      <link>https://othrif.github.io/linux/basics/sftp_access.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/sftp_access.html</guid>
      <description>Access server sftp username@server Download from server sftp username@server:./&amp;#39;my\ file.tar.gz . </description>
    </item>
    
    <item>
      <title>Choose random files from a file</title>
      <link>https://othrif.github.io/linux/basics/rand_files.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/rand_files.html</guid>
      <description>In macos brew install coreutils gshuf -n N input &amp;gt; output In linux shuf -n N input &amp;gt; output </description>
    </item>
    
    <item>
      <title>Copy random file from subfolder to new subfolders</title>
      <link>https://othrif.github.io/linux/basics/copy_rand_file.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/copy_rand_file.html</guid>
      <description>To be used when i want to copy one file from many subfolders in a source folder to local subfolders for i in $(ls /source/of/folders); do pat=&amp;#34;/source/of/folders/$i/&amp;#34;; cp $pat/$(ls $pat | shuf -n 1) $i/.; done If I want to copy the n first files from one subdirectory to another find &amp;lt;source&amp;gt; -maxdepth 1 -type f | head -n &amp;lt;number of files to copy&amp;gt; | xargs -I{} cp &amp;#34;{}&amp;#34; &amp;lt;destination&amp;gt; </description>
    </item>
    
    <item>
      <title>Details about a process and time it was running</title>
      <link>https://othrif.github.io/linux/basics/ps_running.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/ps_running.html</guid>
      <description>Details about a process ps axfu ps -p &amp;lt;PID&amp;gt; How long it has been running ps -p {PID-HERE} -o etime # H:M:S ps -p {PID-HERE} -o etimes # seconds </description>
    </item>
    
    <item>
      <title>Find Files</title>
      <link>https://othrif.github.io/linux/basics/find_files.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/find_files.html</guid>
      <description>Make Files And Directories touch sales.txt, marketing.txt, data_science.csv, product.html; mkdir sales marketing View Files And Directories ls -l total 8 -rw-rw-r-- 1 othrif othrif 0 Jul 29 21:21 data_science.csv, drwxrwxr-x 2 othrif othrif 4096 Jul 29 21:21 marketing -rw-rw-r-- 1 othrif othrif 0 Jul 29 21:21 marketing.txt, -rw-rw-r-- 1 othrif othrif 0 Jul 29 21:21 product.html drwxrwxr-x 2 othrif othrif 4096 Jul 29 21:21 sales -rw-rw-r-- 1 othrif othrif 0 Jul 29 21:21 sales.</description>
    </item>
    
    <item>
      <title>How many files in the folder?</title>
      <link>https://othrif.github.io/linux/basics/files_in_folder.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/files_in_folder.html</guid>
      <description>Number of files in each folder for i in `ls -d */`; do num=`ls $i | wc -l`; echo &amp;#34;$i: $num&amp;#34;; done </description>
    </item>
    
    <item>
      <title>Linux system info</title>
      <link>https://othrif.github.io/linux/basics/system_info.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/system_info.html</guid>
      <description>To find hadrware information about your linux system, few commmands report useful infromation. If several options are given, they perform similar functions.
Pretty display of main things! sudo apt install inxi inxi Linux/kernel information cat /proc/version Linux version cat /etc/issue # or lsb_release -a CPU and processing units lscpu cat /proc/cpuinfo Disk space of file systems pydf # pretty df -H Check RAM free -m List all hardware hwinfo --short sudo lshw -short List pci buses and devices connected to them lspci </description>
    </item>
    
    <item>
      <title>Measure internet speed test</title>
      <link>https://othrif.github.io/linux/basics/speedtest.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/speedtest.html</guid>
      <description>Linux or mac: pip install speedtest-cli speedtest </description>
    </item>
    
    <item>
      <title>Playing sound from linux server in client MacOS</title>
      <link>https://othrif.github.io/linux/basics/sound_remote.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/sound_remote.html</guid>
      <description>There are two configurations that needs to setup:
Client side - MacOS  Install PulseAudio with brew: brew install pulseaudio Configure a listening daemon to receive the audio from the remote machine:  pulseaudio --load=module-native-protocol-tcp --exit-idle-time=-1 --daemon # alias: pulse  PulseAudio will listen on port 4713, double check with lsof -i -P | grep -i &amp;quot;listen&amp;quot; Connect to server with Reverst Port Tunnel: ssh -pXX -R 24713:localhost:4713 server, where 24713 is arbitrary Copy the PulseAudio cookie to the server:  scp ~/.</description>
    </item>
    
    <item>
      <title>Search for a substring inside all files</title>
      <link>https://othrif.github.io/linux/basics/search_string.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/search_string.html</guid>
      <description>Search recurisvely grep -r &amp;#34;substring&amp;#34; . ignore case distinctions: grep -ri &amp;#34;substring&amp;#34; . to only display filenames grep -r -l &amp;#34;othrif&amp;#34; . </description>
    </item>
    
    <item>
      <title>Setup a Deep Learning Server</title>
      <link>https://othrif.github.io/linux/basics/setup_server.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/setup_server.html</guid>
      <description>Basic of python installation curl https://pyenv.run | bash pyenv install --list pyenv install 3.8.7 pyenv global 3.8.7 Preliminaries sudo apt-get update sudo apt-get install build-essential sudo apt-get install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev git SDK &amp;amp; Java curl -s &amp;#34;https://get.sdkman.io&amp;#34; | bash source &amp;#34;/home/othrif/.sdkman/bin/sdkman-init.sh&amp;#34; sdk install java source &amp;#34;$HOME/.sdkman/bin/sdkman-init.sh&amp;#34; sdk install sbt curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh source $HOME/.</description>
    </item>
    
    <item>
      <title>Setup port forwarding and ip addresses</title>
      <link>https://othrif.github.io/linux/basics/ip_address.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/ip_address.html</guid>
      <description>Find my ip addresses Check public ip address (same in MacOS and Linux): curl ifconfig.me Check ip address on MacOS # Private address ipconfig getifaddr en0 Check ip address on Linux hostname -I Setup ssh port forwarding Change ip address in http://routerlogin.net/ for Netgear  Add the host internal ip address to your router&amp;rsquo;s port forwarding service Modify the default port in the host by accessing /etc/ssh/sshd_config Some good tips here: https://dev.</description>
    </item>
    
    <item>
      <title>ssh keys in remote servers</title>
      <link>https://othrif.github.io/linux/basics/ssh_keys.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/ssh_keys.html</guid>
      <description>SSH keys provide an easy, yet extremely secure way of logging into your server. You can following these steps to generate a new SSH key and add it to the ssh-agent:
Run the following command in your terminal: ssh-keygen -b 2048 -t rsa For maximum security, you want to generate a 2048 bit RSA key.
You will be prompted to enter a passphrase. It is highly recommended! ~/.ssh/id_rsa.pub is your public key and ~/.</description>
    </item>
    
    <item>
      <title>Working with remote files via ssh</title>
      <link>https://othrif.github.io/linux/basics/acccess_remote.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/acccess_remote.html</guid>
      <description>This describes the way I can arrange my work to edit files in my laptop and update them remotely to my server. There are two ways to edit files:
Using PyCharm: Open PyCharm Professional, New project&amp;gt;Pure python&amp;gt;Previously configured interpreter &amp;gt; Interpreter: Remote python &amp;gt; create Change configuration: Tools &amp;gt; Deployment &amp;gt; Mappings &amp;gt; Deployment path
Using Sublime Text Edit file on a remote server locally # setup sublime cli  sudo ln -s /Applications/Sublime\ Text.</description>
    </item>
    
    <item>
      <title>Zip Files and send over ssh</title>
      <link>https://othrif.github.io/linux/basics/zip_and_unzip_files.html</link>
      <pubDate>Sun, 12 Apr 2020 14:41:32 +0200</pubDate>
      
      <guid>https://othrif.github.io/linux/basics/zip_and_unzip_files.html</guid>
      <description>Remote synch a directory Compress, copy with ssh, and uncompress:
rsync -arvz -e &amp;#39;ssh -p &amp;lt;your_port&amp;gt;&amp;#39; --progress &amp;lt;Source DIR&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;your ip&amp;gt;:&amp;lt;Dest DIR&amp;gt; Zip Files The -v argument is optional, prints an output with the details of the operation.
gzip regiment.txt battles.txt -v regiment.txt:	-2.2% -- replaced with regiment.txt.gz battles.txt:	-5.6% -- replaced with battles.txt.gz Unzip Files gunzip regiment.txt battles.txt </description>
    </item>
    
  </channel>
</rss>